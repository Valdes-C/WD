using Dapper;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Traceablility01.Data;

namespace Traceablility01.DataReading
{
    public class ProdBatchList
    {
        public List<ProdBatch> prodBatchList = new List<ProdBatch>();

        string sqlCommand = "with p1 as(\r\n SELECT Cast(0 AS BIT)                                       [None],\r\n       seven.prodregistration.id,\r\n       CASE Isnull(seven.prodregistration.typeid, 0)\r\n         WHEN -20090 THEN 'WZK'\r\n         WHEN -20010 THEN 'WZ'\r\n         WHEN -16250 THEN 'PWK'\r\n         WHEN -16240 THEN 'RWK'\r\n         WHEN -16170 THEN 'PW'\r\n         WHEN -16160 THEN 'RW'\r\n         WHEN -16040 THEN 'MMP'\r\n         WHEN -16030 THEN 'MMW'\r\n         WHEN -16000 THEN 'MM'\r\n         WHEN -14970 THEN 'PZK'\r\n         WHEN -14890 THEN 'PZ'\r\n       END                                                  [Type],\r\n       seven.prodregistration.created,\r\n       seven.accessuser.NAME                                [CreatedBy],\r\n       seven.prodregistration.iscanceled,\r\n       seven.prodregistration.isresource,\r\n       seven.prodregistration.isparent,\r\n       seven.prodregistration.carriertypeid,\r\n       seven.prodregistration.carrierid,\r\n       seven.prodcarrier.code                               [CarrierCode],\r\n       seven.prodregistration.feature,\r\n       seven.prodregistration.batch,\r\n       seven.warehouse.code                                 [WarehouseCode],\r\n       ( CASE\r\n           WHEN ( 1 = 0 ) THEN -1\r\n           ELSE 1\r\n         END * seven.prodregistration.quantity )            [Quantity],\r\n       seven.prodregistration.quantityunit                  [ArticleUnit],\r\n       seven.article.code                                   [ArticleCode],\r\n       seven.article.NAME                                   [ArticleName],\r\n\t    Isnull(seven.systemmodule.NAME, '<Nieokreślony>') [ModuleName],\r\n       seven.prodregistration.description,\r\n       ((SELECT TOP 1 documentno\r\n         FROM   seven.document WITH (nolock)\r\n         WHERE  id = prodregistration.documentid))          [Dokument],\r\n       (SELECT TOP 1 prodorder.orderno\r\n        FROM   seven.prodregistration AS PR WITH (nolock)\r\n               JOIN mes.prodresource WITH (nolock)\r\n                 ON prodregistration.orderid = prodresource.id\r\n                    AND prodregistration.ordertypeid = prodresource.typeid\r\n               JOIN mes.prodorder\r\n                 ON prodresource.orderid = prodorder.id\r\n                    AND prodresource.ordertypeid = prodorder.typeid\r\n        WHERE  PR.id = prodregistration.id)                 [Zlecenie],\r\n       ((SELECT TOP 1 contractor.acronym\r\n         FROM   seven.document WITH (nolock)\r\n                JOIN seven.contractor\r\n                  ON contractor.id = document.contractorid\r\n         WHERE  document.id = prodregistration.documentid)) [Kontrahent],\r\n       (SELECT TOP 1 [order].orderno AS [Zamówienie]\r\n        FROM   seven.prodregistration AS PR WITH (nolock)\r\n               JOIN seven.[order] WITH (nolock)\r\n                 ON PR.orderid = [order].id\r\n                    AND PR.ordertypeid = [order].typeid\r\n        WHERE  PR.id = prodregistration.id)                 [Zamówienie]\r\nFROM   seven.prodregistration\r\n       INNER JOIN seven.warehouse\r\n               ON ( ( seven.warehouse.id =\r\n                      seven.prodregistration.destwarehouseid )\r\n                    AND ( seven.warehouse.id <> 0 ) )\r\n       INNER JOIN seven.accessuser\r\n               ON ( seven.accessuser.id = seven.prodregistration.createdby )\r\n       INNER JOIN seven.prodcarrier\r\n               ON ( ( seven.prodcarrier.typeid =\r\n                      seven.prodregistration.carriertypeid )\r\n                    AND ( seven.prodcarrier.id =\r\n                          seven.prodregistration.carrierid ) )\r\n       LEFT OUTER JOIN seven.article\r\n                    ON ( seven.article.id = seven.prodregistration.articleid )\r\n       LEFT OUTER JOIN seven.contractor\r\n                    ON ( seven.contractor.id =\r\n                         seven.prodregistration.contractorid )\r\n       LEFT OUTER JOIN seven.systemmodule\r\n                    ON ( seven.systemmodule.id =\r\n                       seven.prodregistration.moduleid )\r\nWHERE  1 = 1\r\n       AND ( ( ( seven.prodregistration.created >= 'X1X' )\r\n               AND ( seven.prodregistration.created <= 'X2X'\r\n                   ) )\r\n             AND ( seven.prodregistration.iscanceled = 0 )\r\n             AND ( seven.prodregistration.parentid <> 0 ) )\r\n       AND (( prodregistration.destwarehouseid NOT IN ( 1, 7 )\r\n              AND prodregistration.srcwarehouseid NOT IN ( 1, 7 ) ))\r\nUNION\r\nSELECT Cast(0 AS BIT)                                       [ ],\r\n       seven.prodregistration.id,\r\n       CASE Isnull(seven.prodregistration.typeid, 0)\r\n         WHEN -20090 THEN 'WZK'\r\n         WHEN -20010 THEN 'WZ'\r\n         WHEN -16250 THEN 'PWK'\r\n         WHEN -16240 THEN 'RWK'\r\n         WHEN -16170 THEN 'PW'\r\n         WHEN -16160 THEN 'RW'\r\n         WHEN -16040 THEN 'MMP'\r\n         WHEN -16030 THEN 'MMW'\r\n         WHEN -16000 THEN 'MM'\r\n         WHEN -14970 THEN 'PZK'\r\n         WHEN -14890 THEN 'PZ'\r\n       END                                                  [Type],\r\n       seven.prodregistration.created,\r\n       seven.accessuser.NAME                                [CreatedBy],\r\n       seven.prodregistration.iscanceled,\r\n       seven.prodregistration.isresource,\r\n       seven.prodregistration.isparent,\r\n       seven.prodregistration.carriertypeid,\r\n       seven.prodregistration.carrierid,\r\n       seven.prodcarrier.code                               [CarrierCode],\r\n       seven.prodregistration.feature,\r\n       seven.prodregistration.batch,\r\n       seven.warehouse.code                                 [WarehouseCode],\r\n       ( CASE\r\n           WHEN ( 0 = 0 ) THEN -1\r\n           ELSE 1\r\n         END * seven.prodregistration.quantity )            [Quantity],\r\n       seven.prodregistration.quantityunit                  [ArticleUnit],\r\n       seven.article.code                                   [ArticleCode],\r\n       seven.article.NAME    \r\n\t   [ArticleName],\r\n\t    Isnull(seven.systemmodule.NAME, '<Nieokreślony>') [ModuleName],\r\n       seven.prodregistration.description,\r\n       ((SELECT TOP 1 documentno\r\n         FROM   seven.document WITH (nolock)\r\n         WHERE  id = prodregistration.documentid))          [Dokument],\r\n       (SELECT TOP 1 prodorder.orderno\r\n        FROM   seven.prodregistration AS PR WITH (nolock)\r\n               JOIN mes.prodresource WITH (nolock)\r\n                 ON prodregistration.orderid = prodresource.id\r\n                    AND prodregistration.ordertypeid = prodresource.typeid\r\n               JOIN mes.prodorder\r\n                 ON prodresource.orderid = prodorder.id\r\n                    AND prodresource.ordertypeid = prodorder.typeid\r\n        WHERE  PR.id = prodregistration.id)                 [Zlecenie],\r\n       ((SELECT TOP 1 contractor.acronym\r\n         FROM   seven.document WITH (nolock)\r\n                JOIN seven.contractor\r\n                  ON contractor.id = document.contractorid\r\n         WHERE  document.id = prodregistration.documentid)) [Kontrahent],\r\n       (SELECT TOP 1 [order].orderno AS [Zamówienie]\r\n        FROM   seven.prodregistration AS PR WITH (nolock)\r\n               JOIN seven.[order] WITH (nolock)\r\n                 ON PR.orderid = [order].id\r\n                    AND PR.ordertypeid = [order].typeid\r\n        WHERE  PR.id = prodregistration.id)                 [Zamówienie]\r\nFROM   seven.prodregistration\r\n       INNER JOIN seven.warehouse\r\n               ON ( ( seven.warehouse.id =\r\n                    seven.prodregistration.srcwarehouseid )\r\n                    AND ( seven.warehouse.id <> 0 ) )\r\n       INNER JOIN seven.accessuser\r\n               ON ( seven.accessuser.id = seven.prodregistration.createdby )\r\n       INNER JOIN seven.prodcarrier\r\n               ON ( ( seven.prodcarrier.typeid =\r\n                      seven.prodregistration.carriertypeid )\r\n                    AND ( seven.prodcarrier.id =\r\n                          seven.prodregistration.carrierid ) )\r\n       LEFT OUTER JOIN seven.article\r\n                    ON ( seven.article.id = seven.prodregistration.articleid )\r\n       LEFT OUTER JOIN seven.contractor\r\n                    ON ( seven.contractor.id =\r\n                         seven.prodregistration.contractorid )\r\n       LEFT OUTER JOIN seven.systemmodule\r\n                    ON ( seven.systemmodule.id =\r\n                       seven.prodregistration.moduleid )\r\nWHERE  1 = 1\r\n       AND ( ( ( seven.prodregistration.created >= 'X1X' )\r\n               AND ( seven.prodregistration.created <= 'X2X'\r\n                   ) )\r\n             AND ( seven.prodregistration.iscanceled = 0 )\r\n)\r\n       AND (( prodregistration.destwarehouseid NOT IN ( 1, 7 )\r\n              AND prodregistration.srcwarehouseid NOT IN ( 1, 7 ) ))\r\n)\r\nselect x.[Typ] as [OrderType]\r\n\t  ,x.[data ważenia] as [Created]\r\n\t  ,x.[wagowy] as [Worker]\r\n\t  ,x.[partia surowca] as [Batch01]\r\n\t  ,x.[partia wyrobu] as [Batch02]\r\n\t  ,x.[ilość] as [Quantity]\r\n\t  ,x.[jm] as [Unit]\r\n\t  ,x.[indeks] as [ProductIndex]\r\n\t  ,x.[nazwa] as [ProductName]\r\n\t  ,x.[proces] as [Proces]\r\n\t  ,x.[Zlecenie] as [ProdOrder]\r\n\t  ,x.[Dokument] as [Document]\r\n\t  , x.[Obiorca] as [Reciver]\r\n\t  ,x.[Data] as [OrderDate]\r\nfrom\r\n(\r\nselect p1.[Type] as [Typ]\r\n\t  ,p1.[Created] as [data ważenia]\r\n\t  ,p1.[CreatedBy] as [wagowy]\r\n\t  ,p1.[Feature] as [partia surowca]\r\n\t  ,p1.[Batch] as [partia wyrobu]\r\n\t  ,p1.[Quantity] as [ilość]\r\n\t  ,p1.[ArticleUnit] as [jm]\r\n\t  ,p1.[ArticleCode] as [indeks]\r\n\t  ,p1.[ArticleName] as [nazwa]\r\n\t  ,p1.[ModuleName]  as [proces]\r\n\t  ,p1.[Zlecenie]\r\n\t  ,a.[Dokument] as [Dokument]\r\n\t  ,a.[Kontrahent] as [Obiorca]\r\n\t  ,a.[Created] as [Data]\r\nfrom p1 \r\nleft join (\r\n\t\t\tselect p1.[CarrierId] \r\n\t\t\t\t  ,p1.[Dokument] \r\n\t              ,p1.[Kontrahent] \r\n\t              ,p1.[Created]\r\n\r\n\t\t\tfrom p1 \r\n\t\t\twhere 1=1\r\n\t\t\t\t  and p1.[Feature] IN (SELECT distinct p1.[batch] from p1 where p1.[zlecenie] ='X3X' and p1.batch is not null)\r\n\t\t\t\t  and p1.[Type] ='WZ'\r\n\t\t\t) a on a.[CarrierId]=p1.[CarrierId] \r\nwhere 1=1\r\nand zlecenie='X3X'\r\nand p1.[Type] ='RW'\r\nUNION ALL\r\nselect p1.[Type] as [Typ]\r\n\t  ,p1.[Created] as [data ważenia]\r\n\t  ,p1.[CreatedBy] as [wagowy]\r\n\t  ,p1.[Feature] as [partia surowca]\r\n\t  ,p1.[Batch] as [partia wyrobu]\r\n\t  ,p1.[Quantity] as [ilość]\r\n\t  ,p1.[ArticleUnit] as [jm]\r\n\t  ,p1.[ArticleCode] as [indeks]\r\n\t  ,p1.[ArticleName] as [nazwa]\r\n\t  ,p1.[ModuleName]  as [proces]\r\n\t  ,p1.[Zlecenie]\r\n\t  ,null as [Dokument]\r\n\t  ,null  as [Obiorca]\r\n\t  ,null as [Data]\r\nfrom p1 \r\nwhere 1=1\r\nand zlecenie='X3X'\r\nand p1.[Type] ='PW'\r\nUNION ALL\r\nselect p1.[Type] as [Typ]\r\n\t  ,p1.[Created] as [data ważenia]\r\n\t  ,p1.[CreatedBy] as [wagowy]\r\n\t  ,p1.[Feature] as [partia surowca]\r\n\t  ,p1.[Batch] as [partia wyrobu]\r\n\t  ,a.[Quantity] as [ilość]\r\n\t  ,p1.[ArticleUnit] as [jm]\r\n\t  ,p1.[ArticleCode] as [indeks]\r\n\t  ,p1.[ArticleName] as [nazwa]\r\n\t  ,p1.[ModuleName]  as [proces]\r\n\t  ,'X3X' as [Zlecenie]\r\n\t  ,a.[Dokument] as [Dokument]\r\n\t  ,a.[Kontrahent] as [Obiorca]\r\n\t  ,a.[Created] as [Data]\r\nfrom p1 \r\nleft join (\r\n\t\t\tselect p1.[CarrierId] \r\n\t\t\t\t  ,p1.[Dokument] \r\n\t              ,p1.[Kontrahent] \r\n\t              ,p1.[Created]\r\n\t\t\t\t  , p1.[Quantity] as [Quantity]\r\n\t\t\tfrom p1 \r\n\t\t\twhere 1=1\r\n\t\t\t\t  and p1.[Feature] IN (SELECT distinct p1.[batch] from p1 where p1.[zlecenie] ='X3X' and p1.batch is not null)\r\n\t\t\t\t  and p1.[Type] ='WZ'\r\n\t\t\t) a on a.[CarrierId]=p1.[CarrierId] \r\nwhere 1=1\r\nand p1.[Feature] IN (select distinct p2.[Feature] from p1 as p2 where p2.zlecenie='X3X')\r\nand p1.[Type] ='WZ'\r\n) x\r\norder by case x.Typ\r\n\t\t\twhen 'RW' then 0\r\n\t\t\twhen 'PW'then 1\r\n\t\t\twhen 'WZ' then 2\r\n\t\t\tend, x.indeks, x.dokument, x.ilość";
        
        private void fillList(string sql,string documentPZ)
        {
            using (IDbConnection connection = new SqlConnection(Helper.CnnVal("MESXL_PRD")))
            {
                
                try
                {
                    prodBatchList = connection.Query<ProdBatch>($"{sql}").ToList();
                }
                catch (SqlException ex)
                {
                    if (ex.Number == -2)
                    {
                        var msg = System.Windows.MessageBox.Show($"Został przekroczony limit czasu odpowiedzi na bazie dla {documentPZ}", "Błąd bazy");
                        prodBatchList= new List<ProdBatch>();
                    }
                }
            };
        }

        public ProdBatchList(string date01, string date02, string documentPZ)
        {
            sqlCommand = sqlCommand.Replace("X1X", date01);
            sqlCommand = sqlCommand.Replace("X2X", date02);
            sqlCommand = sqlCommand.Replace("X3X", documentPZ);
            fillList(sqlCommand, documentPZ);
        }
    }
}
